{"version":3,"sources":["webpack:///angular/app/pages/content-pages-routing.module.ts","webpack:///angular/app/pages/content-pages.module.ts","webpack:///angular/app/pages/error/error-page.component.ts","webpack:///angular/app/pages/error/error-page.component.html","webpack:///angular/app/pages/signin/signin.component.html","webpack:///angular/app/pages/signin/signin.component.ts","webpack:///angular/app/pages/signup/signup.component.html","webpack:///angular/app/pages/signup/signup.component.ts"],"names":["routes","path","children","component","ErrorPageComponent","data","title","SigninComponent","SignupComponent","ContentPagesRoutingModule","RouterModule","ContentPagesModule","CommonModule","FormsModule","ReactiveFormsModule","NgbModule","NgxSpinnerModule","router","authService","spinner","route","loginFormSubmitted","isLoginFailed","loginForm","FormGroup","username","FormControl","Validators","password","rememberMe","console","log","controls","invalid","show","undefined","type","size","bdColor","color","fullScreen","signinUser","value","subscribe","result","responseHandler","error","hide","reset","navigate","setToken","access_token","onSubmit","fb","errors","registerForm","group","name","email","password_confirmation","signupUser"],"mappings":"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","file":"angular_app_pages_content-pages_module_ts-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: \"error\",\r\n        component: ErrorPageComponent,\r\n        data: {\r\n          title: \"Error Page\",\r\n        },\r\n      },\r\n      {\r\n        path: \"login\",\r\n        component: SigninComponent,\r\n        data: {\r\n          title: \"Login Page\",\r\n        },\r\n      },\r\n      {\r\n        path: \"signup\",\r\n        component: SignupComponent,\r\n        data: {\r\n          title: \"Signup Page\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ContentPagesRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n\r\nimport { ContentPagesRoutingModule } from \"./content-pages-routing.module\";\r\n\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ContentPagesRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  declarations: [ErrorPageComponent, SigninComponent, SignupComponent],\r\n})\r\nexport class ContentPagesModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-error-page\",\r\n  templateUrl: \"./error-page.component.html\",\r\n  styleUrls: [\"./error-page.component.scss\"],\r\n})\r\nexport class ErrorPageComponent {}\r\n","<!--Error page starts-->\r\n<section id=\"error\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row auth-height full-height-vh\">\r\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 text-center\">\r\n            <img\r\n              src=\"assets/img/gallery/error.png\"\r\n              alt=\"\"\r\n              class=\"img-fluid error-img mt-2\"\r\n              height=\"300\"\r\n              width=\"400\"\r\n            />\r\n            <h1 class=\"mt-4\">404 - Page Not Found!</h1>\r\n            <div class=\"w-75 error-text mx-auto mt-4\">\r\n              <p>\r\n                The page you are looking for might have beel removed, had it's\r\n                name changed, or is temporarily unavailable.\r\n              </p>\r\n            </div>\r\n            <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\"\r\n              >Back To Home</a\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Error page ends-->\r\n","<!--Login Page Starts-->\r\n<section id=\"login\">\r\n  <div class=\"row auth-height full-height-vh m-0\">\r\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n      <div class=\"card overflow-hidden\">\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body auth-img\">\r\n            <div class=\"row m-0\">\r\n              <div\r\n                class=\"\r\n                  col-lg-6\r\n                  d-none d-lg-flex\r\n                  justify-content-center\r\n                  align-items-center\r\n                  auth-img-bg\r\n                  p-3\r\n                \"\r\n              >\r\n                <img\r\n                  src=\"assets/img/gallery/login.png\"\r\n                  alt=\"\"\r\n                  class=\"img-fluid\"\r\n                  width=\"300\"\r\n                  height=\"230\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-6 col-12 px-4 py-3\">\r\n                <h4 class=\"mb-2 card-title\">Login</h4>\r\n                <p>Welcome back, please login to your account.</p>\r\n                <ngb-alert\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                  *ngIf=\"isLoginFailed\"\r\n                  (close)=\"isLoginFailed = false\"\r\n                >\r\n                  <p class=\"mb-0\">Login failed!</p>\r\n                </ngb-alert>\r\n                <form [formGroup]=\"loginForm\">\r\n                  <div class=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      formControlName=\"username\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Username\"\r\n                      [ngClass]=\"{\r\n                        'is-invalid': loginFormSubmitted && lf.username.invalid,\r\n                        'is-valid': loginFormSubmitted && !lf.username.invalid\r\n                      }\"\r\n                      required\r\n                    />\r\n                    <div\r\n                      *ngIf=\"\r\n                        loginFormSubmitted &&\r\n                        (lf.username.invalid || lf.username.errors?.required)\r\n                      \"\r\n                      class=\"help-block mt-1 text-danger\"\r\n                    >\r\n                      <i class=\"ft-alert-circle align-middle\"></i> This is\r\n                      required\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      formControlName=\"password\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Old Password\"\r\n                      [ngClass]=\"{\r\n                        'is-invalid': loginFormSubmitted && lf.password.invalid,\r\n                        'is-valid': loginFormSubmitted && !lf.password.invalid\r\n                      }\"\r\n                      required\r\n                    />\r\n                    <div\r\n                      *ngIf=\"\r\n                        loginFormSubmitted &&\r\n                        (lf.password.invalid || lf.password.errors?.required)\r\n                      \"\r\n                      class=\"help-block mt-1 text-danger\"\r\n                    >\r\n                      <i class=\"ft-alert-circle align-middle\"></i> This is\r\n                      required\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    class=\"d-sm-flex justify-content-between mb-3 font-small-2\"\r\n                  >\r\n                    <div class=\"remember-me mb-2 mb-sm-0\">\r\n                      <div class=\"checkbox auth-checkbox\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          formControlName=\"rememberMe\"\r\n                          class=\"form-control\"\r\n                          id=\"rememberMe\"\r\n                        />\r\n                        <label for=\"rememberMe\"\r\n                          ><span class=\"font-small-2 mb-3 font-weight-normal\"\r\n                            >Remember Me</span\r\n                          ></label\r\n                        >\r\n                      </div>\r\n                    </div>\r\n                    <!-- <a href=\"javascript:;\">Forgot Password?</a> -->\r\n                  </div>\r\n                  <div\r\n                    class=\"\r\n                      d-flex\r\n                      justify-content-between\r\n                      flex-sm-row flex-column\r\n                    \"\r\n                  >\r\n                    <!-- <a href=\"javascript:;\" class=\"btn bg-light-primary mb-2 mb-sm-0\">Register</a> -->\r\n                    <a class=\"btn btn-primary\" (click)=\"onSubmit()\">Login</a>\r\n                  </div>\r\n                </form>\r\n                <hr />\r\n                <!-- <div class=\"d-flex justify-content-between align-items-center\">\r\n                    <h6 class=\"text-primary m-0\">Or Login With</h6> -->\r\n                <ngx-spinner></ngx-spinner>\r\n                <!-- <div class=\"login-options\">\r\n                      <a class=\"btn btn-sm btn-social-icon btn-facebook mr-1\"><span class=\"fa fa-facebook\"></span></a>\r\n                      <a class=\"btn btn-sm btn-social-icon btn-twitter mr-1\"><span class=\"fa fa-twitter\"></span></a>\r\n                    </div>\r\n                  </div> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Login Page Ends-->\r\n","import { Component, ViewChild } from \"@angular/core\";\r\nimport { NgForm, FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"./../../shared/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-signin\",\r\n  templateUrl: \"./signin.component.html\",\r\n  styleUrls: [\"./signin.component.scss\"],\r\n})\r\nexport class SigninComponent {\r\n  loginFormSubmitted = false;\r\n  isLoginFailed = false;\r\n\r\n  loginForm = new FormGroup({\r\n    username: new FormControl([Validators.required]),\r\n    password: new FormControl([Validators.required]),\r\n    rememberMe: new FormControl(true),\r\n  });\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    console.log(\"Construct\");\r\n  }\r\n\r\n  get lf() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  // On submit button click\r\n  onSubmit() {\r\n    this.loginFormSubmitted = true;\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.spinner.show(undefined, {\r\n      type: \"ball-triangle-path\",\r\n      size: \"medium\",\r\n      bdColor: \"rgba(0, 0, 0, 0.8)\",\r\n      color: \"#fff\",\r\n      fullScreen: true,\r\n    });\r\n\r\n    this.authService\r\n      .signinUser(this.loginForm.value.username, this.loginForm.value.password)\r\n      .subscribe(\r\n        (result) => {\r\n          console.log(result);\r\n          this.responseHandler(result);\r\n        },\r\n        (error) => {\r\n          console.log(\"error: \" + error);\r\n          this.isLoginFailed = true;\r\n          this.spinner.hide();\r\n        },\r\n        () => {\r\n          this.spinner.hide();\r\n          this.loginForm.reset();\r\n          this.router.navigate([\"app/welcome\"]);\r\n        }\r\n      );\r\n  }\r\n  // Handle response\r\n  responseHandler(data) {\r\n    console.log(\"auth token set\");\r\n    this.authService.setToken(data.access_token);\r\n\r\n    // this.authService.refreshToken();\r\n  }\r\n}\r\n","<div class=\"auth-wrapper\">\r\n  <form class=\"form-signin\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n    <h3 class=\"h3 mb-3 font-weight-normal text-center\">Register User</h3>\r\n\r\n    <!-- Errors -->\r\n    <div *ngIf=\"errors?.name\" class=\"alert alert-danger mt-3\">\r\n      {{ errors?.name }}\r\n    </div>\r\n    <div *ngIf=\"errors?.email\" class=\"alert alert-danger mt-3\">\r\n      {{ errors?.email }}\r\n    </div>\r\n    <div *ngIf=\"errors?.password\" class=\"alert alert-danger mt-3\">\r\n      {{ errors?.password }}\r\n    </div>\r\n    <div *ngIf=\"errors?.password_confirmation\" class=\"alert alert-danger mt-3\">\r\n      {{ errors?.password_confirmation }}\r\n    </div>\r\n\r\n    <!-- Signup form -->\r\n    <div class=\"form-group\">\r\n      <label>Name</label>\r\n      <input type=\"text\" class=\"form-control\" formControlName=\"name\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Email address</label>\r\n      <input type=\"email\" class=\"form-control\" formControlName=\"email\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"password\" class=\"form-control\" formControlName=\"password\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        formControlName=\"password_confirmation\"\r\n      />\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-block btn-primary\">\r\n      Register User\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"./../../shared/auth/auth.service\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.scss\"],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  errors = null;\r\n  password_confirmation;\r\n  constructor(\r\n    public router: Router,\r\n    public fb: FormBuilder,\r\n    public authService: AuthService\r\n  ) {\r\n    this.registerForm = this.fb.group({\r\n      name: [\"\"],\r\n      email: [\"\"],\r\n      password: [\"\"],\r\n      password_confirmation: [\"\"],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onSubmit() {\r\n    this.authService.signupUser(this.registerForm.value).subscribe(\r\n      (result) => {\r\n        console.log(result);\r\n      },\r\n      (error) => {\r\n        this.errors = error.error;\r\n      },\r\n      () => {\r\n        this.registerForm.reset();\r\n        this.router.navigate([\"login\"]);\r\n      }\r\n    );\r\n  }\r\n}\r\n"]}