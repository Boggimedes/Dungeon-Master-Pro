{"version":3,"sources":["./angular/app/pages/content-pages-routing.module.ts","./angular/app/pages/content-pages.module.ts","./angular/app/pages/error/error-page.component.ts","./angular/app/pages/error/error-page.component.html","./angular/app/pages/signin/signin.component.ts","./angular/app/pages/signin/signin.component.html","./angular/app/pages/signup/signup.component.html","./angular/app/pages/signup/signup.component.ts"],"names":[],"mappings":"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","file":"angular_app_pages_content-pages_module_ts-esnext.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: \"error\",\r\n        component: ErrorPageComponent,\r\n        data: {\r\n          title: \"Error Page\",\r\n        },\r\n      },\r\n      {\r\n        path: \"login\",\r\n        component: SigninComponent,\r\n        data: {\r\n          title: \"Login Page\",\r\n        },\r\n      },\r\n      {\r\n        path: \"signup\",\r\n        component: SignupComponent,\r\n        data: {\r\n          title: \"Signup Page\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ContentPagesRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\n\r\nimport { ContentPagesRoutingModule } from \"./content-pages-routing.module\";\r\n\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ContentPagesRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    NgxSpinnerModule,\r\n  ],\r\n  declarations: [ErrorPageComponent, SigninComponent, SignupComponent],\r\n})\r\nexport class ContentPagesModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-error-page\",\r\n  templateUrl: \"./error-page.component.html\",\r\n  styleUrls: [\"./error-page.component.scss\"],\r\n})\r\nexport class ErrorPageComponent {}\r\n","<!--Error page starts-->\r\n<section id=\"error\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row auth-height full-height-vh\">\r\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 text-center\">\r\n            <img\r\n              src=\"assets/img/gallery/error.png\"\r\n              alt=\"\"\r\n              class=\"img-fluid error-img mt-2\"\r\n              height=\"300\"\r\n              width=\"400\"\r\n            />\r\n            <h1 class=\"mt-4\">404 - Page Not Found!</h1>\r\n            <div class=\"w-75 error-text mx-auto mt-4\">\r\n              <p>\r\n                The page you are looking for might have beel removed, had it's\r\n                name changed, or is temporarily unavailable.\r\n              </p>\r\n            </div>\r\n            <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\"\r\n              >Back To Home</a\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Error page ends-->\r\n","import { Component, ViewChild } from \"@angular/core\";\r\nimport { NgForm, FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { AuthService } from \"./../../shared/auth/auth.service\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\n@Component({\r\n  selector: \"app-signin\",\r\n  templateUrl: \"./signin.component.html\",\r\n  styleUrls: [\"./signin.component.scss\"],\r\n})\r\nexport class SigninComponent {\r\n  loginFormSubmitted = false;\r\n  isLoginFailed = false;\r\n\r\n  loginForm = new FormGroup({\r\n    username: new FormControl([Validators.required]),\r\n    password: new FormControl([Validators.required]),\r\n    rememberMe: new FormControl(true),\r\n  });\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private spinner: NgxSpinnerService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    console.log(\"Construct\");\r\n  }\r\n\r\n  get lf() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  // On submit button click\r\n  onSubmit() {\r\n    this.loginFormSubmitted = true;\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.spinner.show(undefined, {\r\n      type: \"ball-triangle-path\",\r\n      size: \"medium\",\r\n      bdColor: \"rgba(0, 0, 0, 0.8)\",\r\n      color: \"#fff\",\r\n      fullScreen: true,\r\n    });\r\n\r\n    this.authService\r\n      .signinUser(this.loginForm.value.username, this.loginForm.value.password)\r\n      .subscribe(\r\n        (result) => {\r\n          console.log(result);\r\n          this.responseHandler(result);\r\n        },\r\n        (error) => {\r\n          console.log(\"error: \" + error);\r\n          this.isLoginFailed = true;\r\n          this.spinner.hide();\r\n        },\r\n        () => {\r\n          this.spinner.hide();\r\n          this.loginForm.reset();\r\n          this.router.navigate([\"app/welcome\"]);\r\n        }\r\n      );\r\n  }\r\n  // Handle response\r\n  responseHandler(data) {\r\n    console.log(\"auth token set\");\r\n    this.authService.setToken(data.access_token);\r\n\r\n    // this.authService.refreshToken();\r\n  }\r\n}\r\n","<!--Login Page Starts-->\r\n<section id=\"login\">\r\n  <div class=\"row auth-height full-height-vh m-0\">\r\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n      <div class=\"card overflow-hidden\">\r\n        <div class=\"card-content\">\r\n          <div class=\"card-body auth-img\">\r\n            <div class=\"row m-0\">\r\n              <div\r\n                class=\"\r\n                  col-lg-6\r\n                  d-none d-lg-flex\r\n                  justify-content-center\r\n                  align-items-center\r\n                  auth-img-bg\r\n                  p-3\r\n                \"\r\n              >\r\n                <img\r\n                  src=\"assets/img/gallery/login.png\"\r\n                  alt=\"\"\r\n                  class=\"img-fluid\"\r\n                  width=\"300\"\r\n                  height=\"230\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-6 col-12 px-4 py-3\">\r\n                <h4 class=\"mb-2 card-title\">Login</h4>\r\n                <p>Welcome back, please login to your account.</p>\r\n                <ngb-alert\r\n                  type=\"light-danger\"\r\n                  class=\"mb-2\"\r\n                  *ngIf=\"isLoginFailed\"\r\n                  (close)=\"isLoginFailed = false\"\r\n                >\r\n                  <p class=\"mb-0\">Login failed!</p>\r\n                </ngb-alert>\r\n                <form [formGroup]=\"loginForm\">\r\n                  <div class=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      formControlName=\"username\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Username\"\r\n                      [ngClass]=\"{\r\n                        'is-invalid': loginFormSubmitted && lf.username.invalid,\r\n                        'is-valid': loginFormSubmitted && !lf.username.invalid\r\n                      }\"\r\n                      required\r\n                    />\r\n                    <div\r\n                      *ngIf=\"\r\n                        loginFormSubmitted &&\r\n                        (lf.username.invalid || lf.username.errors?.required)\r\n                      \"\r\n                      class=\"help-block mt-1 text-danger\"\r\n                    >\r\n                      <i class=\"ft-alert-circle align-middle\"></i> This is\r\n                      required\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <input\r\n                      type=\"password\"\r\n                      formControlName=\"password\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Old Password\"\r\n                      [ngClass]=\"{\r\n                        'is-invalid': loginFormSubmitted && lf.password.invalid,\r\n                        'is-valid': loginFormSubmitted && !lf.password.invalid\r\n                      }\"\r\n                      required\r\n                    />\r\n                    <div\r\n                      *ngIf=\"\r\n                        loginFormSubmitted &&\r\n                        (lf.password.invalid || lf.password.errors?.required)\r\n                      \"\r\n                      class=\"help-block mt-1 text-danger\"\r\n                    >\r\n                      <i class=\"ft-alert-circle align-middle\"></i> This is\r\n                      required\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    class=\"d-sm-flex justify-content-between mb-3 font-small-2\"\r\n                  >\r\n                    <div class=\"remember-me mb-2 mb-sm-0\">\r\n                      <div class=\"checkbox auth-checkbox\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          formControlName=\"rememberMe\"\r\n                          class=\"form-control\"\r\n                          id=\"rememberMe\"\r\n                        />\r\n                        <label for=\"rememberMe\"\r\n                          ><span class=\"font-small-2 mb-3 font-weight-normal\"\r\n                            >Remember Me</span\r\n                          ></label\r\n                        >\r\n                      </div>\r\n                    </div>\r\n                    <!-- <a href=\"javascript:;\">Forgot Password?</a> -->\r\n                  </div>\r\n                  <div\r\n                    class=\"\r\n                      d-flex\r\n                      justify-content-between\r\n                      flex-sm-row flex-column\r\n                    \"\r\n                  >\r\n                    <!-- <a href=\"javascript:;\" class=\"btn bg-light-primary mb-2 mb-sm-0\">Register</a> -->\r\n                    <a class=\"btn btn-primary\" (click)=\"onSubmit()\">Login</a>\r\n                  </div>\r\n                </form>\r\n                <hr />\r\n                <!-- <div class=\"d-flex justify-content-between align-items-center\">\r\n                    <h6 class=\"text-primary m-0\">Or Login With</h6> -->\r\n                <ngx-spinner></ngx-spinner>\r\n                <!-- <div class=\"login-options\">\r\n                      <a class=\"btn btn-sm btn-social-icon btn-facebook mr-1\"><span class=\"fa fa-facebook\"></span></a>\r\n                      <a class=\"btn btn-sm btn-social-icon btn-twitter mr-1\"><span class=\"fa fa-twitter\"></span></a>\r\n                    </div>\r\n                  </div> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Login Page Ends-->\r\n","<div class=\"auth-wrapper\">\r\n  <form class=\"form-signin\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n    <h3 class=\"h3 mb-3 font-weight-normal text-center\">Register User</h3>\r\n\r\n    <!-- Errors -->\r\n    <div *ngIf=\"errors?.name\" class=\"alert alert-danger mt-3\">\r\n      {{ errors?.name }}\r\n    </div>\r\n    <div *ngIf=\"errors?.email\" class=\"alert alert-danger mt-3\">\r\n      {{ errors?.email }}\r\n    </div>\r\n    <div *ngIf=\"errors?.password\" class=\"alert alert-danger mt-3\">\r\n      {{ errors?.password }}\r\n    </div>\r\n    <div *ngIf=\"errors?.password_confirmation\" class=\"alert alert-danger mt-3\">\r\n      {{ errors?.password_confirmation }}\r\n    </div>\r\n\r\n    <!-- Signup form -->\r\n    <div class=\"form-group\">\r\n      <label>Name</label>\r\n      <input type=\"text\" class=\"form-control\" formControlName=\"name\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Email address</label>\r\n      <input type=\"email\" class=\"form-control\" formControlName=\"email\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"password\" class=\"form-control\" formControlName=\"password\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Confirm Password</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        formControlName=\"password_confirmation\"\r\n      />\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-block btn-primary\">\r\n      Register User\r\n    </button>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"./../../shared/auth/auth.service\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.scss\"],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  errors = null;\r\n  password_confirmation;\r\n  constructor(\r\n    public router: Router,\r\n    public fb: FormBuilder,\r\n    public authService: AuthService\r\n  ) {\r\n    this.registerForm = this.fb.group({\r\n      name: [\"\"],\r\n      email: [\"\"],\r\n      password: [\"\"],\r\n      password_confirmation: [\"\"],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onSubmit() {\r\n    this.authService.signupUser(this.registerForm.value).subscribe(\r\n      (result) => {\r\n        console.log(result);\r\n      },\r\n      (error) => {\r\n        this.errors = error.error;\r\n      },\r\n      () => {\r\n        this.registerForm.reset();\r\n        this.router.navigate([\"login\"]);\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}