{"version":3,"sources":["./angular/app/pages/content-pages-routing.module.ts","./angular/app/pages/content-pages.module.ts","./angular/app/pages/error/error-page.component.ts","./angular/app/pages/error/error-page.component.html","./angular/app/pages/signin/signin.component.ts","./angular/app/pages/signin/signin.component.html","./angular/app/pages/signup/signup.component.html","./angular/app/pages/signup/signup.component.ts","./angular/app/shared/services/auth-state.service.ts"],"names":[],"mappings":"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","file":"angular_app_pages_content-pages_module_ts-esnext.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport {SigninComponent } from \"./signin/signin.component\";\r\nimport {SignupComponent } from \"./signup/signup.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'error',\r\n        component: ErrorPageComponent,\r\n        data: {\r\n          title: 'Error Page'\r\n        }\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: SigninComponent,\r\n        data: {\r\n          title: 'Login Page'\r\n        }\r\n      },\r\n      {\r\n        path: 'signup',\r\n        component: SignupComponent,\r\n        data: {\r\n          title: 'Signup Page'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ContentPagesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\nimport { ContentPagesRoutingModule } from \"./content-pages-routing.module\";\r\n\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport { SigninComponent } from \"./signin/signin.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ContentPagesRoutingModule,\r\n        FormsModule ,\r\n        ReactiveFormsModule,\r\n        NgbModule,\r\n        NgxSpinnerModule\r\n    ],\r\n    declarations: [\r\n        ErrorPageComponent,\r\n        SigninComponent,\r\n        SignupComponent,\r\n    ]\r\n})\r\nexport class ContentPagesModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-error-page',\r\n    templateUrl: './error-page.component.html',\r\n    styleUrls: ['./error-page.component.scss']\r\n})\r\n\r\nexport class ErrorPageComponent {\r\n\r\n}","<!--Error page starts-->\r\n<section id=\"error\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row auth-height full-height-vh\">\r\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 text-center\">\r\n            <img src=\"assets/img/gallery/error.png\" alt=\"\" class=\"img-fluid error-img mt-2\" height=\"300\" width=\"400\">\r\n            <h1 class=\"mt-4\">404 - Page Not Found!</h1>\r\n            <div class=\"w-75 error-text mx-auto mt-4\">\r\n              <p>The page you are looking for might have beel removed, had it's name changed, or is temporarily unavailable.</p>\r\n            </div>\r\n            <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">Back To Home</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!--Error page ends-->\r\n","import { Component, ViewChild } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AuthService } from './../../shared/auth/auth.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { TokenService } from '../../shared/services/token.service';\nimport { AuthStateService } from '../../shared/services/auth-state.service';\n\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\n\nexport class SigninComponent {\n\n  loginFormSubmitted = false;\n  isLoginFailed = false;\n\n  loginForm = new FormGroup({\n    username: new FormControl([Validators.required]),\n    password: new FormControl([Validators.required]),\n    rememberMe: new FormControl(true)\n  });\n\n\n  constructor(private router: Router, private authService: AuthService,\n    private spinner: NgxSpinnerService,\n    private token: TokenService,\n    private authState: AuthStateService,\n    private route: ActivatedRoute) {\n  }\n\n  get lf() {\n    return this.loginForm.controls;\n  }\n\n  // On submit button click\n  onSubmit() {\n    this.loginFormSubmitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.spinner.show(undefined,\n      {\n        type: 'ball-triangle-path',\n        size: 'medium',\n        bdColor: 'rgba(0, 0, 0, 0.8)',\n        color: '#fff',\n        fullScreen: true\n      });\n\n    this.authService.signinUser(this.loginForm.value.username, this.loginForm.value.password).subscribe(\n      result => {\n        this.responseHandler(result);\n      },\n      error => {\n        console.log('error: ' + error)\n        this.isLoginFailed = true;\n        this.spinner.hide();\n     },() => {\n        this.spinner.hide();\n        this.authState.setAuthState(true);\n        this.loginForm.reset()\n        this.router.navigate(['app/page']);\n      }\n    );\n  }\n  // Handle response\n  responseHandler(data){\n    this.token.handleData(data.access_token);\n  }\n\n}\n","<!--Login Page Starts-->\n<section id=\"login\">\n    <div class=\"row auth-height full-height-vh m-0\">\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\n        <div class=\"card overflow-hidden\">\n          <div class=\"card-content\">\n            <div class=\"card-body auth-img\">\n              <div class=\"row m-0\">\n                <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3\">\n                  <img src=\"assets/img/gallery/login.png\" alt=\"\" class=\"img-fluid\" width=\"300\" height=\"230\">\n                </div>\n                <div class=\"col-lg-6 col-12 px-4 py-3\">\n                  <h4 class=\"mb-2 card-title\">Login</h4>\n                  <p>Welcome back, please login to your account.</p>\n                  <ngb-alert type=\"light-danger\" class=\"mb-2\" *ngIf=\"isLoginFailed\" (close)=\"isLoginFailed = false\">\n                    <p class=\"mb-0\">Login failed!</p>\n                  </ngb-alert>\n                  <form [formGroup]=\"loginForm\">\n                    <div class=\"form-group\">\n                      <input type=\"text\" formControlName=\"username\" class=\"form-control\" placeholder=\"Username\"\n                        [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.username.invalid, 'is-valid': loginFormSubmitted && !lf.username.invalid }\"\n                        required>\n                      <div *ngIf=\"loginFormSubmitted && (lf.username.invalid || lf.username.errors?.required)\"\n                        class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> This is\n                        required</div>\n                    </div>\n                    <div class=\"form-group\">\n                      <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Old Password\"\n                        [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.password.invalid, 'is-valid': loginFormSubmitted && !lf.password.invalid }\"\n                        required>\n                      <div *ngIf=\"loginFormSubmitted && (lf.password.invalid || lf.password.errors?.required)\"\n                        class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> This is required\n                      </div>\n                    </div>\n                    <div class=\"d-sm-flex justify-content-between mb-3 font-small-2\">\n                      <div class=\"remember-me mb-2 mb-sm-0\">\n                        <div class=\"checkbox auth-checkbox\">\n                          <input type=\"checkbox\" formControlName=\"rememberMe\" class=\"form-control\" id=\"rememberMe\">\n                          <label for=\"rememberMe\"><span class=\"font-small-2 mb-3 font-weight-normal\">Remember Me</span></label>\n                        </div>\n                      </div>\n                      <!-- <a href=\"javascript:;\">Forgot Password?</a> -->\n                    </div>\n                    <div class=\"d-flex justify-content-between flex-sm-row flex-column\">\n                      <!-- <a href=\"javascript:;\" class=\"btn bg-light-primary mb-2 mb-sm-0\">Register</a> -->\n                      <a  class=\"btn btn-primary\" (click)=\"onSubmit()\">Login</a>\n                    </div>\n                  </form>\n                  <hr>\n                  <!-- <div class=\"d-flex justify-content-between align-items-center\">\n                    <h6 class=\"text-primary m-0\">Or Login With</h6> -->\n                    <ngx-spinner></ngx-spinner>\n                    <!-- <div class=\"login-options\">\n                      <a class=\"btn btn-sm btn-social-icon btn-facebook mr-1\"><span class=\"fa fa-facebook\"></span></a>\n                      <a class=\"btn btn-sm btn-social-icon btn-twitter mr-1\"><span class=\"fa fa-twitter\"></span></a>\n                    </div>\n                  </div> -->\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <!--Login Page Ends-->\n  ","<div class=\"auth-wrapper\">\n    <form class=\"form-signin\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n        <h3 class=\"h3 mb-3 font-weight-normal text-center\">Register User</h3>\n  \n        <!-- Errors -->\n        <div *ngIf=\"errors?.name\" class=\"alert alert-danger mt-3\">\n          {{ errors?.name }}\n        </div>\n        <div *ngIf=\"errors?.email\" class=\"alert alert-danger mt-3\">\n          {{ errors?.email }}\n        </div>\n        <div *ngIf=\"errors?.password\" class=\"alert alert-danger mt-3\">\n            {{ errors?.password }}\n        </div>\n        <div *ngIf=\"errors?.password_confirmation\" class=\"alert alert-danger mt-3\">\n            {{ errors?.password_confirmation }}\n        </div>\n  \n        <!-- Signup form -->\n        <div class=\"form-group\">\n            <label>Name</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"name\">\n        </div>\n        <div class=\"form-group\">\n            <label>Email address</label>\n            <input type=\"email\" class=\"form-control\" formControlName=\"email\">\n        </div>\n        <div class=\"form-group\">\n            <label>Password</label>\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n        </div>\n        <div class=\"form-group\">\n          <label>Confirm Password</label>\n          <input type=\"password\" class=\"form-control\" formControlName=\"password_confirmation\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-block btn-primary\">Register User</button>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './../../shared/auth/auth.service';\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\n\nexport class SignupComponent implements OnInit {\n  registerForm: FormGroup;\n  errors = null;\n\n  constructor(\n    public router: Router,\n    public fb: FormBuilder,\n    public authService: AuthService\n  ) {\n    this.registerForm = this.fb.group({\n      name: [''],\n      email: [''],\n      password: [''],\n      password_confirmation: ['']\n    })\n  }\n\n  ngOnInit() { }\n\n  onSubmit() {\n    this.authService.signupUser(this.registerForm.value).subscribe(\n      result => {\n        console.log(result)\n      },\n      error => {\n        this.errors = error.error;\n      },\n      () => {\n        this.registerForm.reset()\n        this.router.navigate(['login']);\n      }\n    )\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthStateService {\n\n  private userState = new BehaviorSubject<boolean>(this.token.isLoggedIn());\n  userAuthState = this.userState.asObservable();\n\n  constructor(\n    public token: TokenService\n  ) { }\n\n  setAuthState(value: boolean) {\n    this.userState.next(value);\n  }\n  \n}"],"sourceRoot":"webpack:///"}