<?php
/**
 *  Copyright 2015 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace DwollaSwagger\models;

use \ArrayAccess;

class Customer implements ArrayAccess {
  static $swaggerTypes = array(
      '_links' => 'map[string,HalLink]',
      '_embedded' => 'object',
      'id' => 'string',
      'first_name' => 'string',
      'last_name' => 'string',
      'email' => 'string',
      'type' => 'string',
      'status' => 'string',
      'created' => 'string'
  );

  static $attributeMap = array(
      '_links' => '_links',
      '_embedded' => '_embedded',
      'id' => 'id',
      'first_name' => 'firstName',
      'last_name' => 'lastName',
      'email' => 'email',
      'type' => 'type',
      'status' => 'status',
      'created' => 'created'
  );

  
  public $_links; /* map[string,HalLink] */
  public $_embedded; /* object */
  public $id; /* string */
  public $first_name; /* string */
  public $last_name; /* string */
  public $email; /* string */
  public $type; /* string */
  public $status; /* string */
  public $created; /* string */

  public function __construct(array $data = null) {
    $this->_links = $data["_links"];
    $this->_embedded = $data["_embedded"];
    $this->id = $data["id"];
    $this->first_name = $data["first_name"];
    $this->last_name = $data["last_name"];
    $this->email = $data["email"];
    $this->type = $data["type"];
    $this->status = $data["status"];
    $this->created = $data["created"];
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}
